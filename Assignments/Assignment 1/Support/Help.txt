printf("Testing 'and' operations on bit patterns represented as octal\n");        int i = 0;        for (i = 0; i < 8; i++) {        unsigned short one = randomunsignedshort();        unsigned short two = randomunsignedshort();                printf("%6ho & %6ho ", one, two);                unsigned short guess = readunsignedshort(" = ");        unsigned short value = one & two;                if (guess == value)            printf("Correct\n");        else            printf("Incorrect\n");    }The printf() statement here has a more elaborate format string. There are two output elements, each with format %6ho. The % signs identify a format specification for a value. Here the Ò6Ó sets a field width (you may have used the setw io-manipulator in C++), the ÒhÓ flags the data as being a short value, and the ÒoÓ specifies octal output. 